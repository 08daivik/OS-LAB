#include stdio.h stdlib.h unistd.h
#include<sys/ types.h wait.h ipc.h shm.h

??parent.c??

typedef struct{
int n;
int arr[100];
}pack_t;

int main()
{
key_t key=1234;
int shmid=shmget(key,sizeof(pack_t),0666|IPC_CREAT);
pack_t *ptr=(pack_t *)shmat(shmid,NULL,0666);
printf("PARENT : shared memory created with key=%d id=%d add=%p\n",key,shmid,ptr);
printf("PARENT : Enter n");
scanf("%d",&ptr->n);
pid_t pid;
pid=fork();
if(pid==0)
	execlp("./child","./child",NULL);
if(pid>0)
{
wait(NULL);
printf("PARENT : Child has completed");
printf("First %d odd numbers are",ptr->n);
for(int i=0;i<ptr->n;i++)
	printf("%d",ptr->arr[i]);
printf("\n");
}
shmdt((void *)ptr);
shmctl(shmid,IPC_RMID,NULL);
printf("PARENT : shared memory deleted);
return 0;
}


?? child.c ??

typedef struct{
int n;
int arr[100];
}pack_t;

int main()
{
key_t key=1234;
int shmid=shmget(key,sizeof(pack_t),0666);
pack_t *ptr=(pack_t *)shmat(shmid,NULL,0666);
printf("CHILD : shared memory linked with key=%d id=%d add=%p\n",key,shmid,ptr);
for(int i=0;i<ptr->n;i++)
	ptr->arr[i]=2*i+1;
printf("CHILD : Generated");
shmdt((void *)ptr);
return 0;
}











