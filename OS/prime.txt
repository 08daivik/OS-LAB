#include - all

?? parent.c ??

int main(int argc,char *argv[])
{
const int size=4096;
if(argc<3)
{
printf("Error - less number of args");
exit(0);
}

int start= atoi(argv[1]);
int end= atoi(argv[2]);

if(start<2 || end<start)
{
printf("ivalid input");
exit(0);
}

pid_t pid=fork();
if(pid==0)
	execlp("./child","./child",argv[1],argv[2],NULL);
else if(pid>0)
{
wait(NULL);
printf("PARENT : Child finished execution");
int shm_fd=shm_open("OS",O_RDONLY,0666);
void *ptr=mmap(0,size,PROT_READ,MAP_SHARED,shm_fd,0);
printf("PARENT : The prime numbers are");
printf("%s",(char *)ptr);
shm_unlink("OS");
}
return 0;
}


?? child.c ??

int main(int argc,char *argv[])
{
const int size=4096;
int shm_fd=shm_open("OS",O_CREAT|O_RDWR,0666);
ftruncate(shm_fd,size);
void *ptr=mmap(0,size,PROT_WRITE,MAP_SHARED,shm_fd,0);

 int start= atoi(argv[1]);
int end= atoi(argv[2]);

sprintf(ptr,"Prime numbers between range %d and %d is",start,end);
ptr+=strlen(ptr);

for(int i=start;i<=end;i++)
{
	int flag=0;
	for(int j=2;j<=i/2;j++)
	{
		if(i%j==0)
			flag=1
	}
if(flag==1)
sprintf(ptr,"%d",i);
ptr+=strlen(ptr);
}

munmap(ptr,size);
close(shm_fd);
return 0;
}
































