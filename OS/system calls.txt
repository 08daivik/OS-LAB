1. CAT open

#include<stdio.h>
#include<stdlib.h>

void main(int argc,char *argv[])
{
FILE *fp;
char ch;
if(argc<2)
{
	printf("File not entered\n");
	exit(1);
}
fp=fopen(argv[1],"r");
if(fp==NULL)
{
	printf("File not entered\n");
	exit(1);
}
while((ch=fgetc(fp)) != EOF)
	printf("%c",ch);
fclose(fp)
printf("/n");
}


2. CAT copy 

#include<stdio.h>
#include<stdlib.h>

void main(int argc,char *argv[])
{
FILE *fp1,*fp2;
char ch;
if(argc<2)
{
}
fp1=fopen(argv[1],"a");
fp2=fopen(argv[2],"r");
if(fp2==NULL)
{
}
while((ch=fgetc(fp2))!=EOF)
	fprintf(fp1,"%c",ch);
fclose(fp1);
fclose(fp2);
}

3. LS

#include<stdio.h>
#include<stdlib.h>
#include<sys/types.h>
#include<dirent.h>

void main(int argc,char *argv[])
{
DIR *dp;
struct dirent *dirp;

if(argc<2)
{
}
if((dp=opendir(argv[1]))==NULL)
{
}
while((dirp=readdir(dp))!=NULL)
{
	printf("%s\n",dirp->d_name);
}
closedir(dp);
}

4. GREP

#include<stdio.h>
#include<string.h>

void main()
{
char fn[10],pat[10],temp[100];
FILE *fp;
printf("Enter filename");
scanf("%s",fn);
printf("Enter pattern");
scanf("%s",pat);
fp=fopen(fn,"r");
while(!feof(fp))
{
	fgets(temp,100,fp);
	if(strstr(temp,pat)
	{
		printf("%s",temp);
	}
}
fclose(fp);
}












	  
				